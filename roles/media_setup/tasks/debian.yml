---
- name: Create directory for compose file
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/docker_stacks/media_stack"
    state: directory
    recurse: true
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"

- name: Create media_srvc user account
  ansible.builtin.user:
    name: "media_srvc"
    password: "!"
    shell: "/sbin/nologin"
    create_home: false

- name: Get UID and GID of media_srvc user
  ansible.builtin.getent:
    database: passwd

- name: Create directories for movies and configs
  ansible.builtin.file:
    path: "{{ media_setup_media_path }}/{{ item }}"
    state: directory
    recurse: true
    owner: "{{ getent_passwd['media_srvc'].1 }}"
    group: "{{ getent_passwd['media_srvc'].2 }}"
  loop:
    - "media"
    - "media/movies"
    - "media/tv"
    - "media/downloads"
    - "jellyfin_config"
    - "jellyfin_cache"
    - "qbittorrent_config"
    - "radarr_config"
    - "sonarr_config"
    - "bazarr_config"
    - "prowlarr_config"

- name: Copy media stack compose file
  ansible.builtin.template:
    src: templates/compose.yml.j2
    dest: "{{ ansible_user_dir }}/docker_stacks/media_stack/compose.yml"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: "0644"
  vars:  # Internal vars - should not be set by importers of this role
    media_srvc_uid: "{{ getent_passwd['media_srvc'].1 }}"
    media_srvc_gid: "{{ getent_passwd['media_srvc'].2 }}"

- name: Deploy media stack
  community.docker.docker_stack:
    state: present
    name: media
    compose:
      - "{{ ansible_user_dir }}/docker_stacks/media_stack/compose.yml"

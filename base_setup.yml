---
- name: Setup base homelab
  hosts: base.home

  tasks:
    - name: Add backports for debian
      ansible.builtin.import_role:
        name: add_backports

    - name: Harden SSH server
      ansible.builtin.import_role:
        name: sshd_harden

    - name: Apply udev rules
      ansible.builtin.import_role:
        name: udev

    - name: Install cockpit server
      ansible.builtin.import_role:
        name: cockpit_setup
      vars:
        cockpit_setup_is_primary: "{{ cockpit_server_is_primary }}"

    - name: Create main ZFS pool
      ansible.builtin.import_role:
        name: zfs_pool
      vars:
        zfs_pool_name: "{{ zfs_main_pool_name }}"
        zfs_pool_options: "{{ zfs_main_pool_options }}"
        zfs_pool_root_dataset_options: "{{ zfs_main_pool_root_dataset_options }}"
        zfs_pool_mountpoint: "{{ zfs_main_pool_mountpoint }}"
        zfs_pool_mode: "{{ zfs_main_pool_mode }}"
        zfs_pool_devices: "{{ zfs_main_pool_devices }}"

    - name: Create ZFS media dataset
      community.general.zfs:
        name: "{{ zfs_main_pool_name }}/media"
        state: present
        extra_zfs_properties:
          mountpoint: "/tank/media"
      become: true

    - name: Create ZFS encrypted dataset
      ansible.builtin.import_role:
        name: zfs_encrypted_dataset
      vars:
        zfs_encrypted_dataset_pool_name: "{{ zfs_main_pool_name }}"
        zfs_encrypted_dataset_passphrase: "{{ zfs_main_pool_encryption_passphrase }}"

    - name: Create ZFS samba dataset
      community.general.zfs:
        name: "{{ zfs_main_pool_name }}/encrypted/samba"
        state: present
        extra_zfs_properties:
          mountpoint: "/tank/samba"
      become: true

    - name: Create backup ZFS pool
      ansible.builtin.import_role:
        name: zfs_pool
      vars:
        zfs_pool_name: "{{ zfs_backup_pool_name }}"
        zfs_pool_options: "{{ zfs_backup_pool_options }}"
        zfs_pool_root_dataset_options: "{{ zfs_backup_pool_root_dataset_options }}"
        zfs_pool_mountpoint: "{{ zfs_backup_pool_mountpoint }}"
        zfs_pool_mode: "{{ zfs_backup_pool_mode }}"
        zfs_pool_devices: "{{ zfs_backup_pool_devices }}"

    - name: Setup backups using restic
      ansible.builtin.import_role:
        name: restic_setup
      vars:
        restic_setup_backup_path: "{{ restic_backup_path }}"
        restic_setup_backup_pass: "{{ restic_backup_pass }}"
        restic_setup_key_dir: "{{ restic_key_dir }}"
        restic_setup_gcs_project_number: "{{ restic_gcs_project_number }}"
        restic_setup_gcs_bucket_name: "{{ restic_gcs_bucket_name }}"
        restic_setup_gcs_credentials_b64: "{{ restic_gcs_credentials_b64 }}"
        restic_setup_srces: "{{ restic_srces }}"

    - name: Setup Samba server
      ansible.builtin.import_role:
        name: samba_setup
      vars:
        samba_setup_users: "{{ samba_users }}"
        samba_setup_root: "{{ samba_root }}"

    - name: Disable log compression
      ansible.builtin.import_role:
        name: no_log_compress
